input {
    kafka {
        bootstrap_servers => "broker:29092"
        topics => ["snort_alerts"]
        auto_offset_reset => "earliest"
        decorate_events => extended
        group_id => "mataelang-dc-logstash"
        schema_registry_url => "http://schema-registry:8081"
    }
}

filter {
    date {
        match => ["timestamp", "yy/MM/dd-HH:mm:ss.SSSSSS"]
        target => "@timestamp"
        timezone => "UTC"
    }

    ruby {
        code => "event.set('received_opensearch_at', (Time.now.to_f * 1000000).to_i)"
    }

    mutate {
        remove_field => ["event"]
    }

    if [dst_addr] {
        geoip {
            source => "dst_addr"
            target => "dst_geoip"
        }

        geoip {
            source => "dst_addr"
            target => "dst_as"
            default_database_type => "ASN"
            fields => ["AUTONOMOUS_SYSTEM_NUMBER", "AUTONOMOUS_SYSTEM_ORGANIZATION"]
        }
    }

    if [src_addr] {
        geoip {
            source => "src_addr"
            target => "src_geoip"
        }

        geoip {
            source => "src_addr"
            target => "src_as"
            default_database_type => "ASN"
            fields => ["AUTONOMOUS_SYSTEM_NUMBER", "AUTONOMOUS_SYSTEM_ORGANIZATION"]
        }
    }

    if [priority] == 1 {
        mutate { add_field => { "priority_str" => "High" } }
    } else if [priority] == 2 {
        mutate { add_field => { "priority_str" => "Medium" } }
    } else if [priority] == 3 {
        mutate { add_field => { "priority_str" => "Low" } }
    } else if [priority] > 3 {
        mutate { add_field => { "priority_str" => "Informational" } }
    } else {
        mutate { add_field => { "priority_str" => "Unknown" } }
    }
}

output {
    opensearch {
        hosts => ["https://opensearch-node1:9200"]
        index => "mataelang-sensor-events-stream"
        action => "create"
        user => "admin"
        password => "${OPENSEARCH_INITIAL_ADMIN_PASSWORD:SecurePassword@123}"
        ssl => true
        ssl_certificate_verification => false
    }
}
